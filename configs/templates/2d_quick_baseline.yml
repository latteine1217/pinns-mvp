# ⚡ 2D 快速基準測試模板
# 用途：快速驗證想法、調試代碼、初步可行性測試
# 預期時間：5-10 分鐘（50-100 epochs）
# 目標：穩定收斂、無 NaN、基本物理一致性

# =============================================================================
# 基本實驗設定
# =============================================================================
experiment:
  name: "2d_quick_baseline_test"  # ⚠️ 修改為你的實驗名稱
  version: "v1.0"
  seed: 42
  device: "auto"  # auto/cpu/cuda
  precision: "float32"
  description: "Quick baseline test for 2D channel flow"

# =============================================================================
# 重現性設定
# =============================================================================
reproducibility:
  deterministic: true
  benchmark: false
  num_workers: 4

# =============================================================================
# 資料配置（2D 切片）
# =============================================================================
data:
  source: "jhtdb"
  dataset: "channel"
  
  jhtdb_config:
    enabled: true
    dataset_name: "channel"
    description: "通道流 (Re_tau=1000) - 2D 切片"
    domain:
      x: [0, 25.13]
      y: [-1.0, 1.0]
      z: [0, 9.42]
    resolution:
      x: 2048
      y: 512
      z: 1536
    time_range: [0.0, 26.0]
    dt: 0.0065
    variables: ['u', 'v', 'w', 'p']
  
  normalize: true
  cache_dir: "./data/jhtdb/channel_flow_re1000"

# 資料標準化配置
normalization:
  type: 'training_data_norm'
  params: {}
  noise_sigma: 0.01  # 小噪聲（快速測試）
  dropout_prob: 0.05  # 小遺失率
  
  # 2D 切片配置
  slice_config:
    plane: "xy"  # 主要剪切平面
    z_position: 4.71  # 中心位置
    steady_state: true
    time_average_window: [20.0, 26.0]

# =============================================================================
# 感測點配置（稀疏採樣）
# =============================================================================
sensors:
  K: 50  # 少量感測點（快速測試）
  selection_method: "qr_pivot"
  spatial_coverage: "optimal"

# =============================================================================
# 模型架構（輕量級）
# =============================================================================
model:
  type: "enhanced_fourier_mlp"
  in_dim: 3  # x, y, z (2D 切片仍需 3D 座標)
  out_dim: 4  # u, v, w, p
  width: 128  # 較小網路（快速）
  depth: 4    # 較淺（快速）
  activation: "sine"
  
  # Fourier 特徵（啟用但簡化）
  fourier_features:
    type: "axis_selective"
    axes_config: {x: [1, 2], y: [], z: [1, 2]}  # 基本頻率
    full_axes_config: {x: [1, 2, 4], y: [], z: [1, 2, 4]}  # 減少高頻
    domain_lengths: {x: 25.13, y: 2.0, z: 9.42}
    fourier_m: 16  # 減少特徵數
    fourier_sigma: 5.0
  
  # VS-PINN 縮放
  scaling:
    learnable: true
    input_norm: "channel_flow"
    output_norm: "friction_velocity"
    friction_velocity: 0.04997
    channel_half_height: 1.0
    viscous_length: 1.0e-3

# =============================================================================
# 物理設定
# =============================================================================
physics:
  type: "vs_pinn_channel_flow"
  nu: 5.0e-5
  rho: 1.0
  
  vs_pinn:
    scaling_factors:
      N_x: 2.0
      N_y: 12.0
      N_z: 2.0
    
    loss_config:
      disable_extra_pde_division: true
      warmup_epochs: 5
    
    boundary_config:
      boundary_band_width: 5.0e-3
    
    enable_rans: false  # 基準測試不使用 RANS
  
  channel_flow:
    Re_tau: 1000.0
    Re_bulk: 39998.0
    u_tau: 0.04997
    pressure_gradient: 0.0025
    
  domain:
    x_range: [0.0, 25.13]
    y_range: [-1.0, 1.0]
    z_range: [0.0, 9.42]
    
  boundary_conditions:
    wall_velocity: [0.0, 0.0, 0.0]
    wall_location: [-1.0, 1.0]
    periodic_x: true
    periodic_z: true
    pressure_driven: true
    mean_pressure_gradient: 0.0025

# =============================================================================
# 損失函數權重（平衡配置）
# =============================================================================
losses:
  # 資料與邊界
  data_weight: 5.0
  boundary_weight: 5.0
  
  # PDE 項（平衡）
  momentum_x_weight: 5.0
  momentum_y_weight: 5.0
  momentum_z_weight: 5.0
  continuity_weight: 5.0
  
  # 約束
  wall_constraint_weight: 10.0
  periodicity_weight: 2.0
  pressure_gradient_weight: 1.0
  
  # 正則化（輕量）
  prior_weight: 0.1
  source_l1: 1.0e-7
  gradient_penalty: 1.0e-5
  
  # ⚠️ 快速測試：關閉自適應權重（減少變數）
  adaptive_weighting: false
  causal_weighting: false

# =============================================================================
# 訓練設定（快速模式）
# =============================================================================
training:
  optimizer: "adam"  # 僅 Adam（快速）
  lr: 1.0e-3
  weight_decay: 1.0e-5
  
  lr_scheduler:
    type: "warmup_cosine"
    min_lr: 1.0e-5
    warmup_epochs: 10
    T_max: 100
  
  epochs: 100  # 快速測試
  max_epochs: 100
  batch_size: 512  # 較小批次（快速）
  validation_freq: 25
  checkpoint_freq: 50
  log_interval: 10
  
  early_stopping:
    enabled: true
    patience: 50
    min_delta: 1.0e-6
  
  # 採樣配置（較少點）
  sampling:
    pde_points: 1024  # 減少碰撞點
    boundary_points: 500
    wall_clustering: 0.2
  
  gradient_clip: 1.0
  
  # 混合精度訓練（AMP）
  amp:
    enabled: false  # ⚠️ 快速測試建議關閉（減少變數）
    # 說明：
    #   - 啟用後可節省 30-50% GPU 記憶體
    #   - ⚠️ 僅支援 CUDA 設備（MPS 不支援 GradScaler）
    #   - 需使用 Adam 優化器
    #   - 快速測試建議關閉以簡化除錯
    #   - 生產訓練建議開啟以提升效能

# ⚠️ 關閉課程學習（簡化流程）
curriculum:
  enable: false

# ⚠️ 關閉 Ensemble（快速測試）
ensemble:
  enable: false

# =============================================================================
# 評估設定
# =============================================================================
evaluation:
  grid_resolution: [64, 32, 32]  # 低解析度評估
  
  metrics:
    - "relative_l2"
    - "wall_shear_stress"
    - "mass_conservation"
    - "mean_velocity_profile"
  
  # 放寬門檻（快速測試）
  thresholds:
    l2_error: 0.50  # 允許較大誤差
    mass_conservation_error: 1.0e-2
    wall_shear_stress_error: 0.50
    mean_profile_correlation: 0.70

# =============================================================================
# 日誌與儲存
# =============================================================================
logging:
  level: "info"
  log_freq: 10
  save_predictions: true
  tensorboard: true
  wandb: false

output:
  checkpoint_dir: "./checkpoints/2d_quick_baseline_test"
  results_dir: "./results/2d_quick_baseline_test"
  visualization_dir: "./results/2d_quick_baseline_test/visualizations"

# =============================================================================
# 驗收標準（快速測試）
# =============================================================================
test_acceptance:
  stability:
    - no_nan_inf: true
    - loss_finite: true
    - gradient_stable: true
  
  performance:
    - u_l2_error_target: 0.50  # 放寬至 50%
    - loss_converged: true
    - pde_loss_ratio_min: 0.10  # 至少 10% PDE 貢獻

# =============================================================================
# 使用說明
# =============================================================================
usage_notes: |
  🎯 用途：
    - 快速驗證新想法（5-10 分鐘）
    - 調試代碼錯誤
    - 確認資料載入正確
    - 初步可行性測試
  
  ⚙️ 配置特點：
    - K=50（最少感測點）
    - epochs=100（快速收斂）
    - 輕量網路（128×4）
    - 關閉自適應/課程學習
    - 關閉 RANS prior
  
  ✅ 成功標準：
    1. 無 NaN/Inf（穩定性）
    2. Loss 持續下降（收斂性）
    3. L2 < 50%（基本精度）
    4. PDE ratio > 10%（物理參與）
  
  🚀 使用範例：
    python scripts/train.py --cfg configs/templates/2d_quick_baseline.yml
  
  📊 預期結果：
    - 訓練時間：5-10 分鐘（GPU）
    - 最終 L2：30-50%
    - PDE ratio：10-20%
  
  ⚠️ 限制：
    - 不適合生產級訓練
    - 精度較低（僅供驗證）
    - 不包含完整物理驗證
